<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.itheima.saas.dao.system.ModuleDao">
    <resultMap id="BaseResultMap" type="module">
        <id column="module_id" property="id"/>
        <result column="parent_id" property="parentId"/>
        <result column="parent_name" property="parentName"/>
        <result column="name" property="name"/>
        <result column="layer_num" property="layerNum"/>
        <result column="is_leaf" property="isLeaf"/>
        <result column="ico" property="ico"/>
        <result column="cpermission" property="cpermission"/>
        <result column="curl" property="curl"/>
        <result column="ctype" property="ctype"/>
        <result column="state" property="state"/>
        <result column="belong" property="belong"/>
        <result column="cwhich" property="cwhich"/>
        <result column="quote_num" property="quoteNum"/>
        <result column="remark" property="remark"/>
        <result column="order_no" property="orderNo"/>
    </resultMap>
    <!--    查 全部-->
    <select id="findAll" resultMap="BaseResultMap">
        SELECT * FROM ss_module
    </select>
    <!--    查 单个-->
    <select id="findById" resultMap="BaseResultMap" parameterType="string">
        SELECT * FROM ss_module WHERE module_id=#{id}
    </select>
    <!--    删除-->
    <delete id="delete" parameterType="string">
        DELETE FROM ss_module WHERE module_id=#{id}
    </delete>
    <!--    新增-->
    <insert id="save" parameterType="module">
         insert into ss_module (module_id, parent_id, parent_name, name, layer_num, is_leaf,
        ico, cpermission, curl, ctype, state, belong, cwhich, quote_num,
        remark, order_no)
        values (#{id}, #{parentId}, #{parentName}, #{name}, #{layerNum}, #{isLeaf},
        #{ico}, #{cpermission}, #{curl}, #{ctype}, #{state}, #{belong}, #{cwhich}, #{quoteNum},
        #{remark}, #{orderNo})
    </insert>
    <!--    修改-->
    <insert id="update" parameterType="module">
        update ss_module
        set parent_id = #{parentId},
        parent_name = #{parentName},
        name = #{name},
        layer_num = #{layerNum},
        is_leaf = #{isLeaf},
        ico = #{ico},
        cpermission = #{cpermission},
        curl = #{curl},
        ctype = #{ctype},
        state = #{state},
        belong = #{belong},
        cwhich = #{cwhich},
        quote_num = #{quoteNum},
        remark = #{remark},
        order_no = #{orderNo}
        where module_id = #{id}
    </insert>
    <select id="findByRoleId" parameterType="string" resultMap="BaseResultMap">
        SELECT ss_module.* FROM pe_role_module
    INNER JOIN ss_module ON pe_role_module.module_id = ss_module.module_id
    WHERE role_id = #{id}
    </select>

    <delete id="deleteByRoleId" parameterType="string">
        DELETE FROM pe_role_module WHERE role_id=#{roleid}
    </delete>

    <insert id="insertRoleModule" parameterType="map">
        INSERT INTO pe_role_module (role_id,module_id) VALUES (#{roleId},#{moduleId})
    </insert>


    <select id="findByBelong" parameterType="int" resultMap="BaseResultMap">
        SELECT * FROM ss_module WHERE belong=#{belong}
    </select>
    <select id="findByUserId" resultMap="BaseResultMap" parameterType="string">
        SELECT * FROM ss_module WHERE module_id IN (
    SELECT DISTINCT pe_role_module.module_id FROM pe_role_module INNER JOIN pe_role_user ON pe_role_user.role_id = pe_role_module.role_id
    WHERE pe_role_user.user_id = #{id})
    </select>
</mapper>